[package]
name = "jwt-compact"
version = "0.4.0"
authors = [
  "Alex Ostrovski <ostrovski.alex@gmail.com>",
  "Akhil Velagapudi <akhilvelagapudi@gmail.com>",
  "Frank Denis <github@pureftpd.org>",
]
edition = "2018"
readme = "README.md"
license = "Apache-2.0"
keywords = ["JWT", "token", "authorization"]
categories = ["web-programming", "cryptography", "no-std"]
description = "Minimalistic JWT implementation with focus on type safety and secure cryptographic primitives"
repository = "https://github.com/slowli/jwt-compact"

exclude = ["e2e-tests"]

[package.metadata.docs.rs]
# Enable non-conflicting additional algorithms in documentation on `docs.rs`.
features = ["exonum-crypto", "es256k", "rsa"]
# Set `docsrs` to enable unstable `doc(cfg(...))` attributes.
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
# Public dependencies (present in the public API).
anyhow = { version = "1.0.34", default-features = false }
base64ct = { version = "1.0", features = ["alloc"] }
chrono = { version = "0.4.19", default-features = false }
rand_core = "0.6.2"
serde = { version = "1.0", default-features = false, features = ["alloc", "derive"] }
serde_cbor = { version = "0.11.1", default-features = false, features = ["alloc"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }

# SHA crypto backend (private dependency; re-exported `digest` crate is public).
hmac = "0.11.0"
sha2 = { version = "0.9", default-features = false }

# Private dependencies (not exposed in the public API).
lazy_static = { version = "1.4", optional = true }
smallvec = "1.6.1"
subtle = { version = "2.4.0", default-features = false }
zeroize = { version = "1.1", features = ["zeroize_derive"] }

# Crypto backends (all public dependencies).
secp256k1 = { version = "0.20", optional = true }

# Strong random generator with no_std support
rdrand = { version = "0.8.0", default-features = false, optional = true}

[dependencies.k256]
version = "0.9.4"
default-features = false
features = ["ecdsa"]
optional = true

[dependencies.exonum-crypto]
version = "1.0.0"
default-features = false
features = ["sodiumoxide-crypto"]
optional = true

[dependencies.ed25519-dalek]
version = "1.0.1"
optional = true
default-features = false
features = ["u64_backend", "rand"]

[dependencies.ed25519-compact]
version = "0.1.9"
optional = true
default-features = false
features = ["random"]

[dependencies.rsa]
version = "0.4"
optional = true
default-features = false

[dev-dependencies]
assert_matches = "1.3"
const-decoder = "0.1.0"
criterion = "0.3.4"
hex-buffer-serde = "0.3.0"
rand = "0.8.3"
uuid = { version = "0.8.2", features = ["serde", "v4"] }
version-sync = "0.9"

[features]
default = ["std", "clock"]
# `secp256k1` crypto backend; `lazy_static` is required for internal initialization.
es256k = ["secp256k1", "lazy_static"]
# Enables `std`-specific functionality (such as error types implementing
# the standard `Error` trait).
std = ["anyhow/std", "base64ct/std", "serde/std", "serde_cbor/std"]
# Enables getting the current time using `Utc::now()` from `chrono`.
# Without it, some `TimeOptions` constructors, such as the `Default` impl,
# are not available. It is still possible to create `TimeOptions`
# with an excplicitly specified clock function, or to set / verify
# time-related `Claims` fields manually.
clock = ["chrono/clock"]

[[bench]]
name = "encoding"
harness = false
path = "benches/encoding.rs"
required-features = ["std", "clock"]

[workspace]
members = [".", "e2e-tests/wasm"]
exclude = ["e2e-tests/no-std"] # including leads to compilation errors for the no-std crate
